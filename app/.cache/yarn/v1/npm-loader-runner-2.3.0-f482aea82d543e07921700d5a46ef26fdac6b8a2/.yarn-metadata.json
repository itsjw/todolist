{
  "manifest": {
    "name": "loader-runner",
    "version": "2.3.0",
    "description": "Runs (webpack) loaders",
    "main": "lib/LoaderRunner.js",
    "scripts": {
      "beautify-lint": "beautify-lint lib/**.js test/*.js",
      "beautify": "beautify-rewrite lib/**.js test/*.js",
      "lint": "eslint lib test",
      "pretest": "npm run lint && npm run beautify-lint",
      "test": "mocha --reporter spec",
      "precover": "npm run lint && npm run beautify-lint",
      "cover": "istanbul cover node_modules/mocha/bin/_mocha",
      "travis": "npm run cover -- --report lcovonly"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/webpack/loader-runner.git"
    },
    "keywords": [
      "webpack",
      "loader"
    ],
    "author": {
      "name": "Tobias Koppers @sokra"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/webpack/loader-runner/issues"
    },
    "homepage": "https://github.com/webpack/loader-runner#readme",
    "engines": {
      "node": ">=4.3.0 <5.0.0 || >=5.10"
    },
    "files": [
      "lib/",
      "bin/",
      "hot/",
      "web_modules/",
      "schemas/"
    ],
    "devDependencies": {
      "beautify-lint": "^1.0.4",
      "codecov.io": "^0.1.6",
      "coveralls": "^2.11.6",
      "eslint": "^3.12.2",
      "eslint-plugin-node": "^3.0.5",
      "eslint-plugin-nodeca": "^1.0.3",
      "istanbul": "^0.4.1",
      "mocha": "^3.2.0",
      "should": "^8.0.2"
    },
    "_registry": "npm",
    "_loc": "/var/www/app/.cache/yarn/v1/npm-loader-runner-2.3.0-f482aea82d543e07921700d5a46ef26fdac6b8a2/package.json",
    "readmeFilename": "README.md",
    "readme": "# loader-runner\n\n``` js\nimport { runLoaders } from \"loader-runner\";\n\nrunLoaders({\n\tresource: \"/abs/path/to/file.txt?query\",\n\t// String: Absolute path to the resource (optionally including query string)\n\n\tloaders: [\"/abs/path/to/loader.js?query\"],\n\t// String[]: Absolute paths to the loaders (optionally including query string)\n\t// {loader, options}[]: Absolute paths to the loaders with options object\n\n\tcontext: { minimize: true },\n\t// Additional loader context which is used as base context\n\n\treadResource: fs.readFile.bind(fs)\n\t// A function to read the resource\n\t// Must have signature function(path, function(err, buffer))\n\n}, function(err, result) {\n\t// err: Error?\n\n\t// result.result: Buffer | String\n\t// The result\n\n\t// result.resourceBuffer: Buffer\n\t// The raw resource as Buffer (useful for SourceMaps)\n\n\t// result.cacheable: Bool\n\t// Is the result cacheable or do it require reexecution?\n\n\t// result.fileDependencies: String[]\n\t// An array of paths (files) on which the result depends on\n\n\t// result.contextDependencies: String[]\n\t// An array of paths (directories) on which the result depends on\n})\n```\n\nMore documentation following...\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/loader-runner/-/loader-runner-2.3.0.tgz#f482aea82d543e07921700d5a46ef26fdac6b8a2",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/loader-runner/-/loader-runner-2.3.0.tgz",
    "hash": "f482aea82d543e07921700d5a46ef26fdac6b8a2",
    "registry": "npm",
    "packageName": "loader-runner"
  },
  "registry": "npm",
  "hash": "f482aea82d543e07921700d5a46ef26fdac6b8a2"
}