{
  "manifest": {
    "name": "eventsource",
    "version": "0.1.6",
    "description": "W3C compliant EventSource client for Node.js",
    "keywords": [
      "eventsource",
      "http",
      "streaming",
      "sse"
    ],
    "homepage": "http://github.com/aslakhellesoy/eventsource-node",
    "author": {
      "name": "Aslak Hellesøy",
      "email": "aslak.hellesoy@gmail.com"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/aslakhellesoy/eventsource-node.git"
    },
    "bugs": {
      "url": "http://github.com/aslakhellesoy/eventsource-node/issues"
    },
    "main": "./lib/eventsource",
    "licenses": [
      {
        "type": "MIT",
        "url": "http://github.com/aslakhellesoy/eventsource-node/raw/master/LICENSE"
      }
    ],
    "devDependencies": {
      "mocha": ">=1.21.4"
    },
    "scripts": {
      "test": "mocha --reporter spec",
      "postpublish": "git push && git push --tags"
    },
    "engines": {
      "node": ">=0.8.0"
    },
    "dependencies": {
      "original": ">=0.0.5"
    },
    "_registry": "npm",
    "_loc": "/var/www/app/.cache/yarn/v1/npm-eventsource-0.1.6-0acede849ed7dd1ccc32c811bb11b944d4f29232/package.json",
    "readmeFilename": "README.md",
    "readme": "# EventSource [![Build Status](https://secure.travis-ci.org/aslakhellesoy/eventsource-node.png)](http://travis-ci.org/aslakhellesoy/eventsource-node) [![Dependencies](https://david-dm.org/aslakhellesoy/eventsource-node.png)](https://david-dm.org/aslakhellesoy/eventsource-node) [![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/aslakhellesoy/eventsource-node/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n\n\n[![NPM](https://nodei.co/npm/eventsource.png?stars&downloads)](https://nodei.co/npm/eventsource/)\n[![NPM](https://nodei.co/npm-dl/eventsource.png)](https://nodei.co/npm/eventsource/)\n\nThis library implements the [EventSource](http://dev.w3.org/html5/eventsource/) client for Node.js. The API aims to be W3C compatible.\n\n## Install\n\n    npm install eventsource\n\n## Usage\n\n```javascript\nvar EventSource = require('eventsource');\n\nvar es = new EventSource('http://demo-eventsource.rhcloud.com/');\nes.onmessage = function(e) {\n  console.log(e.data);\n};\nes.onerror = function() {\n  console.log('ERROR!');\n};\n```\n\nSee the [spec](http://dev.w3.org/html5/eventsource/) for API docs.\n\n## Example\n\nSee https://github.com/einaros/sse-example\n\n## Extensions to the W3C API\n\n### Setting HTTP request headers\n\nYou can define custom HTTP headers for the initial HTTP request. This can be useful for e.g. sending cookies\nor to specify an initial `Last-Event-ID` value.\n\nHTTP headers are defined by assigning a `headers` attribute to the optional `eventSourceInitDict` argument:\n\n```javascript\nvar eventSourceInitDict = {headers: {'Cookie': 'test=test'}};\nvar es = new EventSource(url, eventSourceInitDict);\n```\n\n### Allow unauthorized HTTPS requests\n\nBy default, https requests that cannot be authorized will cause connection to fail and an exception\nto be emitted. You can override this behaviour:\n\n```javascript\nvar eventSourceInitDict = {rejectUnauthorized: false};\nvar es = new EventSource(url, eventSourceInitDict);\n```\n\nNote that for Node.js < v0.10.x this option has no effect - unauthorized HTTPS requests are *always* allowed.\n\n### HTTP status code on error events\n\nUnauthorized and redirect error status codes (for example 401, 403, 301, 307) are available in the `status` property in the error event.\n\n```javascript\nes.onerror = function (err) {\n  if (err) {\n    if (err.status === 401 || err.status === 403) {\n      console.log('not authorized');\n    }\n  }\n};\n```\n",
    "license": "MIT",
    "licenseText": "The MIT License\n\nCopyright (c) 2012, 2013, 2014 Aslak Hellesøy\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/eventsource/-/eventsource-0.1.6.tgz#0acede849ed7dd1ccc32c811bb11b944d4f29232",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/eventsource/-/eventsource-0.1.6.tgz",
    "hash": "0acede849ed7dd1ccc32c811bb11b944d4f29232",
    "registry": "npm",
    "packageName": "eventsource"
  },
  "registry": "npm",
  "hash": "0acede849ed7dd1ccc32c811bb11b944d4f29232"
}