{
  "manifest": {
    "name": "clean-webpack-plugin",
    "version": "0.1.17",
    "author": {
      "name": "John Agan",
      "email": "johnagan@gmail.com"
    },
    "description": "A webpack plugin to remove your build folder(s) before building",
    "homepage": "https://github.com/johnagan/clean-webpack-plugin",
    "license": "MIT",
    "main": "index.js",
    "keywords": [
      "webpack",
      "plugin",
      "clean",
      "node"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/johnagan/clean-webpack-plugin.git"
    },
    "bugs": {
      "url": "https://github.com/johnagan/clean-webpack-plugin/issues"
    },
    "scripts": {
      "test": "mocha --recursive ./test/*_spec.js",
      "test:watch": "npm run test -- --watch",
      "test-travis": "istanbul cover _mocha -- -R spec ./test/*_spec.js"
    },
    "dependencies": {
      "rimraf": "^2.6.1"
    },
    "devDependencies": {
      "chai": "^4.1.1",
      "coveralls": "^2.13.1",
      "istanbul": "^0.4.5",
      "mocha": "^3.5.0",
      "rewire": "^2.5.2"
    },
    "_registry": "npm",
    "_loc": "/var/www/app/.cache/yarn/v1/npm-clean-webpack-plugin-0.1.17-71c57242e6d47204d46f809413176e7bed28ec49/package.json",
    "readmeFilename": "README.md",
    "readme": "# Clean for WebPack\nA webpack plugin to remove/clean your build folder(s) before building\n\n![MIT License](https://camo.githubusercontent.com/d59450139b6d354f15a2252a47b457bb2cc43828/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f7365727665726c6573732e737667)\n[![Build Status][travis-image]][travis-url]\n[![Coveralls Status][coveralls-image]][coveralls-url]\n\n## Installation\n```\nnpm i clean-webpack-plugin --save-dev\n```\n\n## Usage\n```js\nconst CleanWebpackPlugin = require('clean-webpack-plugin')\n\n// webpack config\n{\n  plugins: [\n    new CleanWebpackPlugin(paths [, {options}])\n  ]\n}\n```\n\n## Example Webpack Config\nThis is a modified version of [WebPack's Plugin documentation](https://webpack.js.org/concepts/plugins/) that includes the Clean Plugin.\n\n```js\nconst CleanWebpackPlugin = require('clean-webpack-plugin'); //installed via npm\nconst HtmlWebpackPlugin = require('html-webpack-plugin'); //installed via npm\nconst webpack = require('webpack'); //to access built-in plugins\nconst path = require('path');\n\n// the path(s) that should be cleaned\nlet pathsToClean = [\n  'dist',\n  'build'\n]\n\n// the clean options to use\nlet cleanOptions = {\n  root:     '/full/webpack/root/path',\n  exclude:  ['shared.js'],\n  verbose:  true,\n  dry:      false\n}\n\n// sample WebPack config\nconst webpackConfig = {\n  entry: './path/to/my/entry/file.js',\n  output: {\n    filename: 'my-first-webpack.bundle.js',\n    path: path.resolve(__dirname, 'dist')\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.(js|jsx)$/,\n        loader: 'babel-loader'\n      }\n    ]\n  },\n  plugins: [\n    new CleanWebpackPlugin(pathsToClean, cleanOptions),\n    new webpack.optimize.UglifyJsPlugin(),\n    new HtmlWebpackPlugin({template: './src/index.html'})\n  ]\n}\n\n```\n\n\n### Paths (Required)\nAn [array] of string paths to clean\n```js\n[\n  'dist',         // removes 'dist' folder\n  'build/*.*',    // removes all files in 'build' folder\n  'web/*.js'      // removes all JavaScript files in 'web' folder\n]\n```\n\n\n### Options and defaults (Optional)\n```js\n{\n  // Absolute path to your webpack root folder (paths appended to this)\n  // Default: root of your package\n  root: __dirname,\n\n  // Write logs to console.\n  verbose: true,\n  \n  // Use boolean \"true\" to test/emulate delete. (will not remove files).\n  // Default: false - remove files\n  dry: false,           \n\n  // If true, remove files on recompile. \n  // Default: false\n  watch: false,\n\n  // Instead of removing whole path recursively,\n  // remove all path's content with exclusion of provided immediate children.\n  // Good for not removing shared files from build directories.\n  exclude: [ 'files', 'to', 'ignore' ],\n\n  // allow the plugin to clean folders outside of the webpack root.\n  // Default: false - don't allow clean folder outside of the webpack root\n  allowExternal: false\n}\n```\n\n[travis-url]: https://travis-ci.org/johnagan/clean-webpack-plugin\n[travis-image]: https://travis-ci.org/johnagan/clean-webpack-plugin.svg\n\n[coveralls-url]: https://coveralls.io/github/johnagan/clean-webpack-plugin\n[coveralls-image]: https://coveralls.io/repos/johnagan/clean-webpack-plugin/badge.svg\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 John Agan\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/clean-webpack-plugin/-/clean-webpack-plugin-0.1.17.tgz#71c57242e6d47204d46f809413176e7bed28ec49",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/clean-webpack-plugin/-/clean-webpack-plugin-0.1.17.tgz",
    "hash": "71c57242e6d47204d46f809413176e7bed28ec49",
    "registry": "npm",
    "packageName": "clean-webpack-plugin"
  },
  "registry": "npm",
  "hash": "71c57242e6d47204d46f809413176e7bed28ec49"
}