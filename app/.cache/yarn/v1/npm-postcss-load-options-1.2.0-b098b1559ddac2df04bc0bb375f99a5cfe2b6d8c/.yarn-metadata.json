{
  "manifest": {
    "name": "postcss-load-options",
    "version": "1.2.0",
    "description": "Autoload Options for PostCSS",
    "engines": {
      "node": ">=0.12"
    },
    "main": "index.js",
    "scripts": {
      "clean": "rm -rf .nyc_output coverage jsdoc-api dmd",
      "lint": "standard",
      "test": "nyc ava -v test/pkg/index.js test/rc/index.js test/js/index.js test/err/index.js",
      "logs": "standard-changelog -i CHANGELOG.md -w",
      "docs": "jsdoc2md index.js lib/options.js > INDEX.md",
      "start": "sudo npm run clean && npm run lint && sudo npm test"
    },
    "dependencies": {
      "cosmiconfig": "^2.1.0",
      "object-assign": "^4.1.0"
    },
    "devDependencies": {
      "ava": "^0.18.1",
      "coveralls": "^2.11.16",
      "jsdoc-to-markdown": "^3.0.0",
      "midas": "^2.0.3",
      "nyc": "^10.1.0",
      "postcss": "^5.2.12",
      "postcss-scss": "^0.4.0",
      "standard": "^8.6.0",
      "standard-changelog": "0.0.1",
      "sugarss": "^0.2.0"
    },
    "files": [
      "lib",
      "index.js"
    ],
    "keywords": [
      "postcss",
      "postcss-options"
    ],
    "author": {
      "name": "Michael Ciniawky",
      "email": "michael.ciniawsky@gmail.com"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/michael-ciniawsky/postcss-load-options.git"
    },
    "bugs": {
      "url": "https://github.com/michael-ciniawsky/postcss-load-options/issues"
    },
    "homepage": "https://github.com/michael-ciniawsky/postcss-load-options#readme",
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/var/www/app/.cache/yarn/v1/npm-postcss-load-options-1.2.0-b098b1559ddac2df04bc0bb375f99a5cfe2b6d8c/package.json",
    "readmeFilename": "README.md",
    "readme": "[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![code style][style]][style-url]\n[![chat][chat]][chat-url]\n\n<div align=\"center\">\n  <img width=\"100\" height=\"100\" title=\"Load Options\"\n    src=\"https://michael-ciniawsky.github.io/postcss-load-options/logo.svg\"\n  <a href=\"https://github.com/postcss/postcss\">\n    <img width=\"110\" height=\"110\" title=\"PostCSS\"           src=\"http://postcss.github.io/postcss/logo.svg\" hspace=\"10\">\n  </a>\n  <h1>Load Options</h1>\n</div>\n\n<h2 align=\"center\">Install</h2>\n\n```bash\nnpm i -D postcss-load-options\n```\n<h2 align=\"center\">Usage</h2>\n\n### `package.json`\n\nCreate **`postcss`** section in your projects **`package.json`**.\n\n```\nApp\n  |– client\n  |– public\n  |\n  |- package.json\n```\n\n```json\n{\n  \"dependencies\": {\n    \"sugarss\": \"0.2.0\"\n  },\n  \"postcss\": {\n    \"parser\": \"sugarss\",\n    \"map\": false,\n    \"from\": \"path/to/src/file.css\",\n    \"to\": \"path/to/dest/file.css\"\n  }\n}\n```\n\n### `.postcssrc`\n\nCreate a **`.postcssrc`** file.\n\n```\nApp\n  |– client\n  |– public\n  |\n  |- (.postcssrc|.postcssrc.json|.postcssrc.yaml)\n  |- package.json\n```\n\n**`JSON`**\n```json\n{\n  \"parser\": \"sugarss\",\n  \"map\": false,\n  \"from\": \"path/to/src/file.css\",\n  \"to\": \"path/to/dest/file.css\"\n}\n```\n\n**`YAML`**\n```yaml\nparser: sugarss\nmap: false\nfrom: \"/path/to/src.sss\"\nto: \"/path/to/dest.css\"\n```\n\n### `postcss.config.js` or `.postcssrc.js`\n\nYou may need some JavaScript logic to generate your config. For this case you can use a file named **`postcss.config.js`** or **`.postcssrc.js`**.\n\n```\nApp\n  |– client\n  |– public\n  |\n  |- (postcss.config.js|.postcssrc.js)\n  |- package.json\n```\n\n```js\nmodule.exports = (ctx) => {\n  return {\n    parser: ctx.sugar ? 'sugarss' : false,\n    map: ctx.env === 'development' ? ctx.map || false,\n    from: 'path/to/src/file.css',\n    to: 'path/to/dest/file.css'\n  }\n}\n```\n\n<h2 align=\"center\">Options</h2>\n\n**`parser`**:\n\n```js\n'parser': 'sugarss'\n```\n\n**`syntax`**:\n\n```js\n'syntax': 'postcss-scss'\n```\n**`stringifier`**:\n\n```js\n'stringifier': 'midas'\n```\n\n[**`map`**:](https://github.com/postcss/postcss/blob/master/docs/source-maps.md)\n\n```js\n'map': 'inline'\n```\n\n**`from`**:\n\n```js\nfrom: 'path/to/dest/file.css'\n```\n\n**`to`**:\n\n```js\nto: 'path/to/dest/file.css'\n```\n\n### Context\n\nWhen using a function `(postcss.config.js)`, it is possible to pass context to `postcss-load-options`, which will be evaluated before loading your options. By default `ctx.env (process.env.NODE_ENV)` and `ctx.cwd (process.cwd())` are available.\n\n<h2 align=\"center\">Example</h2>\n\n### <img width=\"80\" height=\"80\" src=\"https://worldvectorlogo.com/logos/nodejs-icon.svg\">\n\n```js\nconst { readFileSync } = require('fs')\n\nconst postcss = require('postcss')\nconst optionsrc = require('postcss-load-options')\n\nconst sss =  readFileSync('index.sss', 'utf8')\n\nconst ctx = { sugar: true,  map: 'inline' }\n\noptionsrc(ctx).then((options) => {\n  postcss()\n    .process(sss, options)\n    .then(({ css }) => console.log(css))\n}))\n```\n\n<h2 align=\"center\">Maintainers</h2>\n\n<table>\n  <tbody>\n   <tr>\n    <td align=\"center\">\n      <img width=\"150 height=\"150\"\n      src=\"https://avatars.githubusercontent.com/u/5419992?v=3&s=150\">\n      <br />\n      <a href=\"https://github.com/michael-ciniawsky\">Michael Ciniawsky</a>\n    </td>\n  </tr>\n  <tbody>\n</table>\n\n\n[npm]: https://img.shields.io/npm/v/postcss-load-options.svg\n[npm-url]: https://npmjs.com/package/postcss-load-options\n\n[node]: https://img.shields.io/node/v/postcss-load-options.svg\n[node-url]: https://nodejs.org/\n\n[deps]: https://david-dm.org/michael-ciniawsky/postcss-load-options.svg\n[deps-url]: https://david-dm.org/michael-ciniawsky/postcss-load-options\n\n[tests]: http://img.shields.io/travis/michael-ciniawsky/postcss-load-options.svg\n[tests-url]: https://travis-ci.org/michael-ciniawsky/postcss-load-options\n\n[cover]: https://coveralls.io/repos/github/michael-ciniawsky/postcss-load-options/badge.svg\n[cover-url]: https://coveralls.io/github/michael-ciniawsky/postcss-load-options\n\n[style]: https://img.shields.io/badge/code%20style-standard-yellow.svg\n[style-url]: http://standardjs.com/\n\n[chat]: https://img.shields.io/gitter/room/postcss/postcss.svg\n[chat-url]: https://gitter.im/postcss/postcss\n",
    "licenseText": "License (MIT)\n\nCopyright (c) 2016 Michael Ciniawsky <michael.ciniawsky@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/postcss-load-options/-/postcss-load-options-1.2.0.tgz#b098b1559ddac2df04bc0bb375f99a5cfe2b6d8c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/postcss-load-options/-/postcss-load-options-1.2.0.tgz",
    "hash": "b098b1559ddac2df04bc0bb375f99a5cfe2b6d8c",
    "registry": "npm",
    "packageName": "postcss-load-options"
  },
  "registry": "npm",
  "hash": "b098b1559ddac2df04bc0bb375f99a5cfe2b6d8c"
}