{
  "manifest": {
    "name": "tiny-emitter",
    "version": "2.0.2",
    "description": "A tiny (less than 1k) event emitter library",
    "main": "index.js",
    "scripts": {
      "test-node": "tape test/index.js | tap-format-spec",
      "test": "testling | tap-format-spec",
      "bundle": "node_modules/.bin/browserify index.js > dist/tinyemitter.js -s TinyEmitter && echo 'Bundled'",
      "minify": "node_modules/.bin/uglifyjs dist/tinyemitter.js -o dist/tinyemitter.min.js -m && echo 'Minified'",
      "build": "npm test && npm run bundle && npm run minify",
      "size": "node_modules/.bin/uglifyjs index.js -o minified.js -m && ls -l && rm minified.js"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/scottcorgan/tiny-emitter.git"
    },
    "keywords": [
      "event",
      "emitter",
      "pubsub",
      "tiny",
      "events",
      "bind"
    ],
    "author": {
      "name": "Scott Corgan"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/scottcorgan/tiny-emitter/issues"
    },
    "devDependencies": {
      "@tap-format/spec": "0.2.0",
      "browserify": "11.2.0",
      "tape": "4.2.1",
      "testling": "1.7.1",
      "uglify-js": "2.5.0"
    },
    "testling": {
      "files": [
        "test/index.js"
      ],
      "browsers": [
        "iexplore/10.0",
        "iexplore/9.0",
        "firefox/16..latest",
        "chrome/22..latest",
        "safari/5.1..latest",
        "ipad/6.0..latest",
        "iphone/6.0..latest",
        "android-browser/4.2..latest"
      ]
    },
    "_registry": "npm",
    "_loc": "/var/www/app/.cache/yarn/v1/npm-tiny-emitter-2.0.2-82d27468aca5ade8e5fd1e6d22b57dd43ebdfb7c/package.json",
    "readmeFilename": "README.md",
    "readme": "# tiny-emitter\n\nA tiny (less than 1k) event emitter library.\n\n## Install\n\n### npm\n\n```\nnpm install tiny-emitter --save\n```\n\n## Usage\n\n```js\nvar Emitter = require('tiny-emitter');\nvar emitter = new Emitter();\n\nemitter.on('some-event', function (arg1, arg2, arg3) {\n //\n});\n\nemitter.emit('some-event', 'arg1 value', 'arg2 value', 'arg3 value');\n```\n\nAlternatively, you can skip the initialization step by requiring `tiny-emitter/instance` instead. This pulls in an already initialized emitter.\n\n```js\nvar emitter = require('tiny-emitter/instance');\n\nemitter.on('some-event', function (arg1, arg2, arg3) {\n //\n});\n\nemitter.emit('some-event', 'arg1 value', 'arg2 value', 'arg3 value');\n```\n\n## Instance Methods\n\n### on(event, callback[, context])\n\nSubscribe to an event\n\n* `event` - the name of the event to subscribe to\n* `callback` - the function to call when event is emitted\n* `context` - (OPTIONAL) - the context to bind the event callback to\n\n### once(event, callback[, context])\n\nSubscribe to an event only **once**\n\n* `event` - the name of the event to subscribe to\n* `callback` - the function to call when event is emitted\n* `context` - (OPTIONAL) - the context to bind the event callback to\n\n### off(event[, callback])\n\nUnsubscribe from an event or all events. If no callback is provided, it unsubscribes you from all events.\n\n* `event` - the name of the event to unsubscribe from\n* `callback` - the function used when binding to the event\n\n### emit(event[, arguments...])\n\nTrigger a named event\n\n* `event` - the event name to emit\n* `arguments...` - any number of arguments to pass to the event subscribers\n\n## Test and Build\n\nBuild (Tests, Browserifies, and minifies)\n\n```\nnpm install\nnpm run build\n```\n\nTest\n\n```\nnpm install\nnpm test\n```\n\n## License\n\n[MIT](https://github.com/scottcorgan/tiny-emitter/blob/master/LICENSE)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2017 Scott Corgan\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/tiny-emitter/-/tiny-emitter-2.0.2.tgz#82d27468aca5ade8e5fd1e6d22b57dd43ebdfb7c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/tiny-emitter/-/tiny-emitter-2.0.2.tgz",
    "hash": "82d27468aca5ade8e5fd1e6d22b57dd43ebdfb7c",
    "registry": "npm",
    "packageName": "tiny-emitter"
  },
  "registry": "npm",
  "hash": "82d27468aca5ade8e5fd1e6d22b57dd43ebdfb7c"
}